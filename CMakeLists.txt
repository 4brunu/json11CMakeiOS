cmake_minimum_required(VERSION 3.0)

project(example_all)

# Get root directory.
set(dir ${CMAKE_CURRENT_SOURCE_DIR})

# Set output directories.
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${dir}/bin/ios")
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${dir}/bin/ios")
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${dir}/bin/ios")

set(PLATFORM_NAME ${IOS_PLATFORM})

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/Debug/${PLATFORM_NAME}")
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG "${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/Debug/${PLATFORM_NAME}")
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG "${CMAKE_ARCHIVE_OUTPUT_DIRECTORY}/Debug/${PLATFORM_NAME}")

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/Release/${PLATFORM_NAME}")
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE "${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/Release/${PLATFORM_NAME}")
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE "${CMAKE_ARCHIVE_OUTPUT_DIRECTORY}/Release/${PLATFORM_NAME}")

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fobjc-arc -std=c++11 -stdlib=libc++ -Wall")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS}  -fobjc-arc -Wall")
set(CMAKE_XCODE_ATTRIBUTE_CODE_SIGNING_REQUIRED "NO")


# Add projects.
# Change here the sub directory
add_subdirectory(deps/json11)
